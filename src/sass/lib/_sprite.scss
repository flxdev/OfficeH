/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-left-name: 'arrow-left';
$arrow-left-x: 0px;
$arrow-left-y: 85px;
$arrow-left-offset-x: 0px;
$arrow-left-offset-y: -85px;
$arrow-left-width: 20px;
$arrow-left-height: 35px;
$arrow-left-total-width: 176px;
$arrow-left-total-height: 120px;
$arrow-left-image: 'sprite.png';
$arrow-left: (0px, 85px, 0px, -85px, 20px, 35px, 176px, 120px, 'sprite.png', 'arrow-left', );
$arrow-right-name: 'arrow-right';
$arrow-right-x: 20px;
$arrow-right-y: 85px;
$arrow-right-offset-x: -20px;
$arrow-right-offset-y: -85px;
$arrow-right-width: 20px;
$arrow-right-height: 35px;
$arrow-right-total-width: 176px;
$arrow-right-total-height: 120px;
$arrow-right-image: 'sprite.png';
$arrow-right: (20px, 85px, -20px, -85px, 20px, 35px, 176px, 120px, 'sprite.png', 'arrow-right', );
$callback-name: 'callback';
$callback-x: 32px;
$callback-y: 53px;
$callback-offset-x: -32px;
$callback-offset-y: -53px;
$callback-width: 21px;
$callback-height: 24px;
$callback-total-width: 176px;
$callback-total-height: 120px;
$callback-image: 'sprite.png';
$callback: (32px, 53px, -32px, -53px, 21px, 24px, 176px, 120px, 'sprite.png', 'callback', );
$check-name: 'check';
$check-x: 76px;
$check-y: 22px;
$check-offset-x: -76px;
$check-offset-y: -22px;
$check-width: 24px;
$check-height: 18px;
$check-total-width: 176px;
$check-total-height: 120px;
$check-image: 'sprite.png';
$check: (76px, 22px, -76px, -22px, 24px, 18px, 176px, 120px, 'sprite.png', 'check', );
$close-menu-name: 'close-menu';
$close-menu-x: 0px;
$close-menu-y: 53px;
$close-menu-offset-x: 0px;
$close-menu-offset-y: -53px;
$close-menu-width: 32px;
$close-menu-height: 32px;
$close-menu-total-width: 176px;
$close-menu-total-height: 120px;
$close-menu-image: 'sprite.png';
$close-menu: (0px, 53px, 0px, -53px, 32px, 32px, 176px, 120px, 'sprite.png', 'close-menu', );
$close-name: 'close';
$close-x: 53px;
$close-y: 22px;
$close-offset-x: -53px;
$close-offset-y: -22px;
$close-width: 23px;
$close-height: 23px;
$close-total-width: 176px;
$close-total-height: 120px;
$close-image: 'sprite.png';
$close: (53px, 22px, -53px, -22px, 23px, 23px, 176px, 120px, 'sprite.png', 'close', );
$line-left-name: 'line-left';
$line-left-x: 100px;
$line-left-y: 22px;
$line-left-offset-x: -100px;
$line-left-offset-y: -22px;
$line-left-width: 41px;
$line-left-height: 7px;
$line-left-total-width: 176px;
$line-left-total-height: 120px;
$line-left-image: 'sprite.png';
$line-left: (100px, 22px, -100px, -22px, 41px, 7px, 176px, 120px, 'sprite.png', 'line-left', );
$line-right-name: 'line-right';
$line-right-x: 100px;
$line-right-y: 29px;
$line-right-offset-x: -100px;
$line-right-offset-y: -29px;
$line-right-width: 41px;
$line-right-height: 7px;
$line-right-total-width: 176px;
$line-right-total-height: 120px;
$line-right-image: 'sprite.png';
$line-right: (100px, 29px, -100px, -29px, 41px, 7px, 176px, 120px, 'sprite.png', 'line-right', );
$rect-bottom-name: 'rect-bottom';
$rect-bottom-x: 53px;
$rect-bottom-y: 11px;
$rect-bottom-offset-x: -53px;
$rect-bottom-offset-y: -11px;
$rect-bottom-width: 123px;
$rect-bottom-height: 11px;
$rect-bottom-total-width: 176px;
$rect-bottom-total-height: 120px;
$rect-bottom-image: 'sprite.png';
$rect-bottom: (53px, 11px, -53px, -11px, 123px, 11px, 176px, 120px, 'sprite.png', 'rect-bottom', );
$rect-top-name: 'rect-top';
$rect-top-x: 53px;
$rect-top-y: 0px;
$rect-top-offset-x: -53px;
$rect-top-offset-y: 0px;
$rect-top-width: 123px;
$rect-top-height: 11px;
$rect-top-total-width: 176px;
$rect-top-total-height: 120px;
$rect-top-image: 'sprite.png';
$rect-top: (53px, 0px, -53px, 0px, 123px, 11px, 176px, 120px, 'sprite.png', 'rect-top', );
$scroller-name: 'scroller';
$scroller-x: 0px;
$scroller-y: 0px;
$scroller-offset-x: 0px;
$scroller-offset-y: 0px;
$scroller-width: 53px;
$scroller-height: 53px;
$scroller-total-width: 176px;
$scroller-total-height: 120px;
$scroller-image: 'sprite.png';
$scroller: (0px, 0px, 0px, 0px, 53px, 53px, 176px, 120px, 'sprite.png', 'scroller', );
$spritesheet-width: 176px;
$spritesheet-height: 120px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($arrow-left, $arrow-right, $callback, $check, $close-menu, $close, $line-left, $line-right, $rect-bottom, $rect-top, $scroller, );
$spritesheet: (176px, 120px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
